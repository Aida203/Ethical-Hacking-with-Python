more details here: https://www.thepythoncode.com/article/using-shodan-api-in-python


                          SOME IMPORTANT POINTS 


-Platforms(Shodan, Censys, and ZoomEye) that offer Internet scanning as a service scan the Internet for
 devices running a given service, and we can find surveillance cameras,industrial control systems such 
 as power plants, servers, IoT devices, and much more.

 -These services often offer an API, which allows programmers to take full advantage of their scan results

 -used by security researchers to find vulnerable hosts and create reports on vulnerability impacts.

 IoT=> Internet of things and refers to a collective network of connected devices and technologies
 which facilitate communication between devices and the cloud,and between devices themselves.

 

 This tutorial's objective :a script that searches for instances of DVWA (Damn Vulnerable Web Application)
 that still have default credentials and reports them.

 DVWA =>an open-source project made for security testing; it's a web application that is vulnerable by design.
 it's expected that users deploy it on their machines to use it. We will try to find instances on the Internet 
 that already have it deployed to use it without installing it.


 The search for instances will be done using the title.

 CHALLENGE: most of the instances should have their login credentials changed.So, to find accessible DVWA instances, 
 it's necessary to try default credentials on each of the detected instances  => we'll instances that will be accessed will 
 be those with unchanged credentials.

----------------------------------------*****************CODE EXPLANATION***************************************************************-----------------
 
Shodan=> search engine for Internet-connected devices. Google allows search for websites,
but shodan allows you to search for devices.

 A)

import shodan=> allows access to data stored in Shodan to automate tasks and integrate in to existing technologies

import re => for regular expressions




B)Get the user API key and connect to the api server


C)make an api request for a page of 100 results. Just like entering in the search bar of shodan that
we want to search for DVWA instances 

return the instances found on the given page, else => an error occured and hence print "error"

D) sends a GET request to the DVWA login page to retrieve the user_token. Then, it sends a POST request
 with the default username, password, and the CSRF token, and then it checks whether the authentication was successful.

  checking pages with default credentials:
    -takes a hosts
    -trying default credentials simulating a user
    -get a CSFR token from login.php page and try to login with default credentials
    -CSFR token=>requested at each login by the api and the login will only be successful if a CSFR token is present.
   
   
    A CSRF token is a unique, secret, unpredictable value that is generated by the server-side application and
    transmitted to the client in such a way that it is included in a subsequent HTTP request made by the client. When
    the later request is made, the server-side application validates that the request includes the expected token and 
    rejects the request if the token is missing or invalid.
    CSRF tokens can prevent CSRF attacks by making it impossible for an attacker to construct a fully valid HTTP request
    suitable for feeding to a victim user. Since the attacker cannot determine or predict the value of a user's CSRF token,
    they cannot construct a request with all the parameters that are necessary for the application to honor the request.
   
   
    -s=requests.Session()=>creates a session object. Since we'll be making several requests to the same host, the underlying TCP connection will be reused
    which can lead to performance boosting. Also used to provide default data to request methods by providing data to the properties 
    on a session object.


 SESSION OBJECT

 Sometimes it is useful to preserve certain parameters across multiple requests. 
 The Session object does exactly that. For example, it will persist cookie data across all requests made using the same 
 session.The Session object uses urllib3’s connection pooling. This means that the underlying TCP connection will be reused
 for all the requests made to the same host.
 This can significantly boost the performance. You can also use methods of the Requests object with the Session object.
 Sessions are also helpful when you want to send the same data across all requests. For example, if you decide to send 
 a cookie or a user-agent header with all the requests to a given domain, you can use Session objects.
 (https://medium.com/edureka/python-requests-tutorial-30edabfa6a1c)
 --------------------------------------------------------------------------------------------------------------------------------

    -keysInData=('ssl' in instance) and 'https' or 'http'

    SSL is an acronym for Secure Sockets Layer. A type of digital security that allows encrypted communication
    between a website and a web browser.The goal of SSL/TLS is to make it safe and secure to transmit sensitive
    information including personal data, payment or login information

   'https' or 'http' to make our api supports both http and https 

    -result=s.get(f"{keysInData}://{instance['ip_str']}{instance['port']}/login.php", verify=False)=>make a get request
            
          verify =>(optional) if True, the SSL certificate will be verified.
          (https://www.adamsmith.haus/python/docs/requests.Session)

    -except requests.exceptions.ConnectionError:
        return False
     => incase of any network failures return False


     -status_code!=200: Successful responses (200–299) => if it was unsuccessful then abort for this link

     -([0-9a-f]+) => capture and group the set of characters  ,0-9  => match for any digit between 0 and 9, a-f => match for any 
     lower case between a and f, + =>match for any + character in the string
     - .group(1)  =>Returns a string containing the <n>th captured match. In this case the 1st captured match.
     (https://realpython.com/regex-python/)

 
    -requests.post(url, params={key: value}, args)
    r=s.post( f"{keysInData}://{instance['ip_str']}:{instance['port']}/login.php",..................................)
    to make an http post =>The requests module provides us with post method which can directly send the data by taking the URL
    and value of the data parameter. 
    POST requests are never cached
    POST requests do not remain in the browser history.



    - 302 Found redirect status response code indicates that the resource requested has been temporarily moved to the URL given
     by the Location header

E)takes a query and iterates over the pages in Shodan search results, and for each host on each page, we call the has_valid_credentials() function:
 

